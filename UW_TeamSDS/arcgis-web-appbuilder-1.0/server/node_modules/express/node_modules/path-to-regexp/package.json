{
  "name": "path-to-regexp",
  "description": "Express style path to RegExp utility",
  "version": "0.1.2",
  "scripts": {
    "test": "istanbul cover _mocha -- -R spec"
  },
  "keywords": [
    "express",
    "regexp"
  ],
  "component": {
    "scripts": {
      "path-to-regexp": "index.js"
    }
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/component/path-to-regexp.git"
  },
  "devDependencies": {
    "mocha": "^1.17.1",
    "istanbul": "^0.2.6"
  },
  "bugs": {
    "url": "https://github.com/component/path-to-regexp/issues"
  },
  "homepage": "https://github.com/component/path-to-regexp",
  "_id": "path-to-regexp@0.1.2",
  "dist": {
    "shasum": "9b2b151f9cc3018c9eea50ca95729e05781712b4",
    "tarball": "http://registry.npmjs.org/path-to-regexp/-/path-to-regexp-0.1.2.tgz"
  },
  "_from": "path-to-regexp@0.1.2",
  "_npmVersion": "1.4.4",
  "_npmUser": {
    "name": "blakeembrey",
    "email": "hello@blakeembrey.com"
  },
  "maintainers": [
    {
      "name": "tjholowaychuk",
      "email": "tj@vision-media.ca"
    },
    {
      "name": "jongleberry",
      "email": "jonathanrichardong@gmail.com"
    },
    {
      "name": "dominicbarnes",
      "email": "dominic@dbarnes.info"
    },
    {
      "name": "tootallnate",
      "email": "nathan@tootallnate.net"
    },
    {
      "name": "rauchg",
      "email": "rauchg@gmail.com"
    },
    {
      "name": "retrofox",
      "email": "rdsuarez@gmail.com"
    },
    {
      "name": "coreh",
      "email": "thecoreh@gmail.com"
    },
    {
      "name": "forbeslindesay",
      "email": "forbes@lindesay.co.uk"
    },
    {
      "name": "kelonye",
      "email": "kelonyemitchel@gmail.com"
    },
    {
      "name": "mattmueller",
      "email": "mattmuelle@gmail.com"
    },
    {
      "name": "yields",
      "email": "yields@icloud.com"
    },
    {
      "name": "anthonyshort",
      "email": "antshort@gmail.com"
    },
    {
      "name": "ianstormtaylor",
      "email": "ian@ianstormtaylor.com"
    },
    {
      "name": "cristiandouce",
      "email": "cristian@gravityonmars.com"
    },
    {
      "name": "swatinem",
      "email": "arpad.borsos@googlemail.com"
    },
    {
      "name": "stagas",
      "email": "gstagas@gmail.com"
    },
    {
      "name": "amasad",
      "email": "amjad.masad@gmail.com"
    },
    {
      "name": "juliangruber",
      "email": "julian@juliangruber.com"
    },
    {
      "name": "shtylman",
      "email": "shtylman@gmail.com"
    },
    {
      "name": "calvinfo",
      "email": "calvin@calv.info"
    },
    {
      "name": "blakeembrey",
      "email": "hello@blakeembrey.com"
    }
  ],
  "directories": {},
  "_shasum": "9b2b151f9cc3018c9eea50ca95729e05781712b4",
  "_resolved": "https://registry.npmjs.org/path-to-regexp/-/path-to-regexp-0.1.2.tgz",
  "readme": "\n# Path-to-RegExp\n\n  Turn an Express-style path string such as `/user/:name` into a regular expression.\n\n## Usage\n\n```javascript\nvar pathToRegexp = require('path-to-regexp');\n```\n### pathToRegexp(path, keys, options)\n\n - **path** A string in the express format, an array of such strings, or a regular expression\n - **keys** An array to be populated with the keys present in the url.  Once the function completes, this will be an array of strings.\n - **options**\n   - **options.sensitive** Defaults to false, set this to true to make routes case sensitive\n   - **options.strict** Defaults to false, set this to true to make the trailing slash matter.\n   - **options.end** Defaults to true, set this to false to only match the prefix of the URL.\n\n```javascript\nvar keys = [];\nvar exp = pathToRegexp('/foo/:bar', keys);\n//keys = ['bar']\n//exp = /^\\/foo\\/(?:([^\\/]+?))\\/?$/i\n```\n\n## Live Demo\n\nYou can see a live demo of this library in use at [express-route-tester](http://forbeslindesay.github.com/express-route-tester/).\n\n## License\n\n  MIT",
  "readmeFilename": "Readme.md"
}
