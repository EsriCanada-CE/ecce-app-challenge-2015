function upgradeAppConfig(e){return e=appVersionManager.upgrade(e,e.wabVersion,stemappVersion.wabVersion),e.wabVersion=stemappVersion.wabVersion,e.theme.version=stemappVersion.themes[e.theme.name],logger.info("upgrade app config."),sharedUtils.visitElement(e,function(e){if(!e.widgets&&e.uri){var s=sharedUtils.getWidgetNameFromUri(e.uri),n=e.version;e.version=stemappVersion.widgets[s];var r=sharedUtils.getAmdFolderFromUri(e.uri);if(fs.existsSync(path.join(stemappPath,r,"VersionManager.js"))){var i=requirejs(r+"VersionManager"),a=new i;if(a.getVersionIndex(n)<a.getVersionIndex(stemappVersion.widgets[s])){if(!e.config)return;var t;t="string"==typeof e.config&&fs.existsSync(path.join(stemappPath,e.config))?fse.readJsonSync(path.join(stemappPath,e.config)):e.config;try{e.config=a.upgrade(t,n,stemappVersion.widgets[s]),logger.info("upgrade widget config.",s)}catch(o){e.version=n,e.config=t,logger.error("upgrade widget config failed.",s,o)}}else a.getVersionIndex(n)>a.getVersionIndex(stemappVersion.widgets[s])&&console.log("widget",s,"version",e.version,"is newer")}}}),e}function getAppVersion(e){var s={appVersion:e.wabVersion,latestVersion:stemappVersion.wabVersion};return s.wabVersionStatus=appVersionManager.getVersionIndex(e.wabVersion)<appVersionManager.getVersionIndex(stemappVersion.wabVersion)?"old":appVersionManager.getVersionIndex(e.wabVersion)>appVersionManager.getVersionIndex(stemappVersion.wabVersion)?"new":"same",s}function getStemappVersionInfo(){if(stemappVersion)return stemappVersion;var e={},s=fse.readJsonSync(path.join(stemappPath,"config.json"));return e.wabVersion=s.wabVersion,e.widgets={},fs.readdirSync(path.join(stemappPath,"widgets")).forEach(function(s){var n=path.join(stemappPath,"widgets",s,"manifest.json");if(fs.existsSync(n)){var r=fse.readJsonSync(n);e.widgets[s]=r.version}}),e.themes={},fs.readdirSync(path.join(stemappPath,"themes")).forEach(function(s){var n=path.join(stemappPath,"themes",s,"manifest.json");if(fs.existsSync(n)){var r=fse.readJsonSync(n);e.themes[s]=r.version}fs.existsSync(path.join(stemappPath,"themes",s,"widgets"))&&fs.readdirSync(path.join(stemappPath,"themes",s,"widgets")).forEach(function(n){var r=path.join(stemappPath,"themes",s,"widgets",n,"manifest.json");if(fs.existsSync(r)){var i=fse.readJsonSync(r);e.widgets[n]=i.version}})}),stemappVersion=e,e}var path=require("path"),fs=require("fs"),fse=require("fs-extra"),requirejs=require("requirejs"),sharedUtils=requirejs("jimu/shared/utils"),log4js=require("log4js"),logger=log4js.getLogger("app"),basePath=path.join(__dirname,".."),stemappPath=path.join(basePath,"../client/stemapp");exports.getStemappVersionInfo=getStemappVersionInfo,exports.getAppVersion=getAppVersion,exports.upgradeAppConfig=upgradeAppConfig;var AppVersionManager=requirejs("jimu/shared/AppVersionManager"),appVersionManager=new AppVersionManager,stemappVersion=getStemappVersionInfo();